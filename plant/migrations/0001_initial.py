# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-02-21 19:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('distribution_id', models.IntegerField(db_column='Distribution_id', primary_key=True, serialize=False)),
                ('location_name', models.CharField(blank=True, max_length=45, null=True)),
                ('location_vn', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'distribution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('family', models.CharField(blank=True, db_column='Family', max_length=45, null=True)),
            ],
            options={
                'db_table': 'familia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genus',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('genus', models.CharField(blank=True, db_column='Genus', max_length=45, null=True)),
            ],
            options={
                'db_table': 'genus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Metabolite',
            fields=[
                ('metabolite_id', models.IntegerField(db_column='Metabolite_id', primary_key=True, serialize=False)),
                ('metabolite_name', models.CharField(blank=True, db_column='Metabolite_name', max_length=45, null=True)),
                ('casid', models.CharField(blank=True, db_column='CASID', max_length=45, null=True)),
                ('inchikey', models.CharField(blank=True, db_column='InChiKey', max_length=100, null=True)),
                ('smiles', models.CharField(blank=True, db_column='SMILES', max_length=100, null=True)),
                ('formula', models.CharField(blank=True, db_column='Formula', max_length=45, null=True)),
                ('linkpubchem', models.CharField(blank=True, db_column='LinkPubchem', max_length=250, null=True)),
                ('linkknapsack', models.CharField(blank=True, db_column='LinkKnapsack', max_length=45, null=True)),
                ('image', models.CharField(blank=True, db_column='Image', max_length=500, null=True)),
            ],
            options={
                'db_table': 'metabolite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('plant_id', models.IntegerField(db_column='Plant_id', primary_key=True, serialize=False)),
                ('plant_engname', models.CharField(blank=True, max_length=45, null=True)),
                ('plant_vnname', models.CharField(blank=True, max_length=45, null=True)),
                ('plant_image', models.CharField(blank=True, max_length=500, null=True)),
                ('plant_image_2', models.CharField(blank=True, max_length=500, null=True)),
                ('plant_image_3', models.CharField(blank=True, max_length=500, null=True)),
                ('plant_image_4', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'plant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TherapeuticEffects',
            fields=[
                ('thera_id', models.IntegerField(primary_key=True, serialize=False)),
                ('thera_name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'therapeutic_effects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlantHasDistribution',
            fields=[
                ('plant', models.ForeignKey(db_column='Plant_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='plant.Plant')),
            ],
            options={
                'db_table': 'plant_has_distribution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlantHasMetabolite',
            fields=[
                ('plant', models.ForeignKey(db_column='Plant_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='plant.Plant')),
            ],
            options={
                'db_table': 'plant_has_metabolite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlantHasTherapeuticEffects',
            fields=[
                ('plant', models.ForeignKey(db_column='Plant_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='plant.Plant')),
            ],
            options={
                'db_table': 'plant_has_therapeutic_effects',
                'managed': False,
            },
        ),
    ]
